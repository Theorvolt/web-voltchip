
void RET(interpreter *ip);
void CLS(interpreter *ip);
void JUMP(interpreter *ip, int addr);
void FUNC(interpreter *ip, int addr);
void SKIP_EQ(interpreter *ip, int reg1, int val);
void SKIP_NEQ(interpreter *ip, int reg1, int val);
void SKIPR_EQ(interpreter *ip, int reg1, int reg2);
void LD_VAL(interpreter *ip, int reg1, int val);
void ADD_VAL(interpreter *ip, int reg1, int val);
void LD_REG(interpreter *ip, int reg1, int reg2);
void OR(interpreter *ip, int reg1, int reg2);
void AND(interpreter *ip, int reg1, int reg2);
void XOR(interpreter *ip, int reg1, int reg2);
void ADD_CARRY(interpreter *ip, int reg1, int reg2);
void SUB_CARRY(interpreter *ip, int reg1, int reg2);
void SHR(interpreter *ip, int reg1);
void SUB_NEG(interpreter *ip, int reg1, int reg2);
void SHL(interpreter *ip, int reg1);
void SKIPR_NEQ(interpreter *ip, int reg1, int reg2);
void LOAD_I(interpreter *ip,int address);
void JUMP_V0(interpreter *ip,int address);
void RND(interpreter *ip, int reg1, int val);
void DRAW(interpreter *ip, int reg1, int reg2, int val);
void SKIP_KEY(interpreter *ip, int reg1);
void SKIPN_KEY(interpreter *ip, int reg1);
void LD_DT(interpreter *ip, int reg1);
void LD_KEY(interpreter *ip, int reg1);
void ST_DT(interpreter *ip, int reg1);
void LD_SD(interpreter *ip, int reg1);
void ADD_I(interpreter *ip, int reg1);
void LD_DIGIT(interpreter *ip, int reg1);
void LD_V(interpreter *ip, int reg1);
void ST_V(interpreter *ip, int reg1);
void LD_VI(interpreter *ip, int reg1);